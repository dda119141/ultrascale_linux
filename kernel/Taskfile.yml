# https://taskfile.dev

version: '3'

vars:
  CROSS_COMPILE: "aarch64-linux-gnu-"
  ARCH: "arm64"
  KERNEL_OUT_DIR:
    sh: echo "{{.USER_WORKING_DIR}}/generated/kernel/src"
  NPROC:
    sh:
      echo $(nproc)

tasks:
   install_kernel_dependencies:
     desc: "check and install host dependencies"
     internal: true
     cmds:
       - dpkg -l build-essential >/dev/null && echo "continue" || sudo apt install build-essential -y
       - dpkg -l libssl-dev >/dev/null && echo "continue" || sudo apt install libssl-dev-y
       - dpkg -l flex >/dev/null && echo "continue" || sudo apt install flex -y
       - dpkg -l bison >/dev/null && echo "continue" || sudo apt install bison -y
       - dpkg -l bc >/dev/null && echo "continue" || sudo apt install bc -y

   create_kernel_folder:
     desc: "create kernel folder"
     cmds:
       - test -d {{.USER_WORKING_DIR}}/generated || mkdir {{.USER_WORKING_DIR}}/generated
       - test -d {{.USER_WORKING_DIR}}/generated/kernel || mkdir {{.USER_WORKING_DIR}}/generated/kernel
       - test -d {{.KERNEL_OUT_DIR}} || mkdir {{.KERNEL_OUT_DIR}}

   get_kernel:
     desc: "get kernel"
     aliases: [gk]
     vars:
       GIT_VERSION: "73099304b82e2667cce4b1baafeb9d47850dc697"
     status:
       - cat {{.KERNEL_OUT_DIR}}/.git/HEAD | grep {{.GIT_VERSION}}
     cmds:
       - task: create_kernel_folder
       - task: install_kernel_dependencies
       - test -d {{.KERNEL_OUT_DIR}} && rm -rf {{.KERNEL_OUT_DIR}} || echo "continue"
       - git clone https://github.com/Xilinx/linux-xlnx.git --depth 1 -b xlnx_rebase_v5.15_LTS_2022.2 {{.KERNEL_OUT_DIR}}

   clean_kernel:
     desc: "clean build linux kernel"
     deps: [get_kernel]
     env:
       ARCH: "{{.ARCH}}"
       CROSS_COMPILE: "{{.CROSS_COMPILE}}"
     cmds:
       - task: install_kernel_dependencies
       - cd {{.KERNEL_OUT_DIR}} && make ARCH={{.ARCH}} clean

   clean_build_kernel:
     desc: "clean build linux kernel"
     aliases: [cbk]
     deps: [get_kernel]
     env:
       ARCH: "{{.ARCH}}"
       CROSS_COMPILE: "{{.CROSS_COMPILE}}"
     cmds:
       - task: clean_kernel
       - cp {{.TASKFILE_DIR}}/ulrr_defconfig {{.KERNEL_OUT_DIR}}/arch/{{.ARCH}}/configs/
       - cd {{.KERNEL_OUT_DIR}} && make ARCH={{.ARCH}} ulrr_defconfig
       - cd {{.KERNEL_OUT_DIR}} && make ARCH={{.ARCH}} -j {{.NPROC}} CROSS_COMPILE={{.CROSS_COMPILE}}

   kernel_mount_rootfs_from_emmc:
     desc: "kernel should mount rootfs from emmc"
     vars:
       GIT_VERSION: "73099304b82e2667cce4b1baafeb9d47850dc697"
     status:
       - cat {{.KERNEL_OUT_DIR}}/.git/HEAD | grep {{.GIT_VERSION}}
     cmds:
       - cd {{.KERNEL_OUT_DIR}} && git am {{.TASKFILE_DIR}}/patches/0001-xlnx_v5.15-boot_or_mount-rootfs-from-sd_card.patch


   build_kernel:
     desc: "build linux kernel"
     aliases: [bk]
     deps: [get_kernel]
     env:
       ARCH: "{{.ARCH}}"
       CROSS_COMPILE: "{{.CROSS_COMPILE}}"
     cmds:
       - task: kernel_mount_rootfs_from_emmc
       - cp {{.TASKFILE_DIR}}/ulrr_defconfig {{.KERNEL_OUT_DIR}}/arch/{{.ARCH}}/configs/
       - cd {{.KERNEL_OUT_DIR}} && make ARCH={{.ARCH}} ulrr_defconfig
       - cd {{.KERNEL_OUT_DIR}} && make ARCH={{.ARCH}} -j {{.NPROC}} CROSS_COMPILE={{.CROSS_COMPILE}} 


